1、快排练习





public void quickSort(int[] arr, int low, int high) {
	int start = low;
	int end = high;
	int key = arr[low];
	
	while(start < end) {
		while(start < end && arr[end] >= key) {
			end--;
		}
		if(arr[end] <= key) {
			int temp = arr[end];
			arr[end] = arr[start];
			arr[start] = temp;
		}
		
		while(start < end && arr[start] <= key) {
			start++;
		}
		if(arr[start] >= key) {
			int temp = arr[start];
			arr[start] = arr[end];
			arr[end] = temp;
		}
		
		if(start > low) {
			quickSort(arr, low, start - 1);
		}
		if(end < high) {
			quickSort(arr, end + 1, high);
		}
	}
}


public void quickSort(int[] arr, int low, int high) {
	int start = low;
	int end = high;
	int key = arr[low];
	while(start < end) {
		while(start < end && arr[end] >= key) {
			end--;
		}
		if(arr[end] <= key) {
			int temp = arr[end];
			arr[end] = arr[start];
			arr[start] = temp;
		}
		while(start < end && arr[start] <= key) {
			start++;
		}
		if(arr[start] >= key) {
			int temp = arr[start];
			arr[start] = arr[end];
			arr[end] = temp;
		}
		
		if(start > low) {
			quickSort(arr, low, start - 1);
		}
		if(end < high) {
			quickSort(arr, end + 1, high);
		}
	}
}

public static void quickSort(int[] arr, int low, int high) {
	int start = low;
	int end = high;
	int key = arr[low];
	while(start < end){
		while(start < end && arr[end] >= key)
			end--;
		if(arr[end] <= key) {
			int temp = arr[end];
			arr[end] = arr[start];
			arr[start] = temp;
		}
		
		while(start < end && arr[start] <= key)
			start++;
		if(arr[start] >= key) {
			int temp = arr[start];
			arr[start] = arr[end];
			arr[end] = temp;
		}
		if(start > low) {
			quickSort(arr, low, start - 1);
		}
		if(end < high) {
			quickSort(arr, end + 1, high);
		}
	}
}

public void quickSort(int[] arr, int low, int high){
	int start = low;
	int end = high;
	int key = arr[low];
	while(start < end){
		while(start < end && key >= arr[end])
			end--;
		if(key >= arr[end]){
			int temp = arr[end];
			arr[end] = arr[start];
			arr[start] = temp;
		}
		
		while(start < end && key <= arr[start])
			start++;
		if(key <= arr[start]){
			int temp = arr[start];
			arr[start] = arr[end];
			arr[end] = temp;
		}
		
		if(start > low){
			quickSort(arr, low, start - 1);
		}
		if(end < high){
			quickSort(arr, end + 1, high);
		}
		
	}
}




